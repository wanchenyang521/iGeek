package com.wanchenyang.learn;

/**
 * @author 晨阳
 * @version 1.0
 * @date 2019-03-27 08:42
 * @description
 * 0\d{2,3}-\d{7,8})|(1[3-9]\d{9})
 * [\w\-]+@[\w]+(\.[a-zA-Z]{2,3}){1,2}
 * 正则表达式
 * 1.普通字符 a,bv
 * 2.转义字符 \t \n \' \" \\ \^
 * 3.预定义字符 \w \W \d \D . \s \S
 * 4.\b 位置非\w
 *  ^与字符串开始匹配的地方

 * 5.数量词
 *  ？+*
 *  {n} {n,} {n,m}
 * 6.[xX]通过方括号匹配，能够匹配方括号中的任意一个字符
 * 7.[^xX]通过方括号匹配，能够匹配方括号中的任意一个字符之外的
 * 8.[a-z];[0-9];[a-zA-Z0-9]
 *
 * 9. | ：分支结构，左右两边表达式之间"或"关系，匹配左边或右边
 *10. ():整体
 **/
public class Zhenzebiaodashi
{
//    字符：x
//含义：代表的是字符x
//例如：匹配规则为 "a"，那么需要匹配的字符串内容就是 ”a”字符：x

//    (转义)字符：\\ ;\t;\n;\”;\’
//含义：代表的是反斜线字符'\'
//例如：匹配规则为"\\" ，那么需要匹配的字符串内容就是 ”\”

//    字符类：[abc]
//含义：代表的是字符a、b 或 c
//例如：匹配规则为"[abc]" ，那么需要匹配的内容就是字符a，或者字符b，或字符c的一个

//    字符类：[^abc]
//含义：代表的是除了 a、b 或 c以外的任何字符
//例如：匹配规则为"[^abc]"，那么需要匹配的内容就是不是字符a，或者不是字符b，或不是字符c的任意一个字符

//    字符类：[a-zA-Z]
//含义：代表的是a 到 z 或 A 到 Z，两头的字母包括在内
//例如：匹配规则为"[a-zA-Z]"，那么需要匹配的是一个大写或者小写字母
//
//字符类：[0-9]
//含义：代表的是 0到9数字，两头的数字包括在内
//例如：匹配规则为"[0-9]"，那么需要匹配的是一个数字
//
//字符类：[a-zA-Z_0-9]
//含义：代表的字母或者数字或者下划线(即单词字符)
//例如：匹配规则为" [a-zA-Z_0-9] "，那么需要匹配的是一个字母或者是一个数字或一个下滑线


//    预定义字符类：.
//含义：代表的是任何字符
//例如：匹配规则为" . "，那么需要匹配的是一个任意字符。如果，就想使用 . 的话，使用匹配规则"\\."来实现

//    预定义字符类：\d <==>[0-9]
//含义：代表的是 0到9数字，两头的数字包括在内，相当于[0-9]
//例如：匹配规则为"\d "，那么需要匹配的是一个数字



// \D \W 相反


//预定义字符类：\w <==> [a-zA-Z_0-9]
//含义：代表的字母或者数字或者下划线(即单词字符)，相当于[a-zA-Z_0-9]
//例如：匹配规则为"\w "，，那么需要匹配的是一个字母或者是一个数字或一个下滑线
//
//边界匹配器：\b
//含义：代表的是单词边界，\b的位置代表那一侧两边需要的是 非 单词字符([a-zA-Z_0-9])汉字
//例如：匹配规则为"\b[abc]\b" ，那么代表的是字母a或b或c的左右两边需要的是非单词字符([a-zA-Z_0-9])
//
//数量词：X?
//含义：代表的是X出现一次或一次也没有
//例如：匹配规则为"a?"，那么需要匹配的内容是一个字符a，或者一个a都没有
//
//数量词：X*
//含义：代表的是X出现零次或多次
//例如：匹配规则为"a*" ，那么需要匹配的内容是多个字符a，或者一个a都没有
//
//数量词：X+
//含义：代表的是X出现一次或多次
//例如：匹配规则为"a+"，那么需要匹配的内容是多个字符a，或者一个a
//
//数量词：X{n}
//含义：代表的是X出现恰好 n 次
//例如：匹配规则为"a{5}"，那么需要匹配的内容是5个字符a
//
//数量词：X{n,}
//含义：代表的是X出现至少 n 次
//例如：匹配规则为"a{5, }"，那么需要匹配的内容是最少有5个字符a
//
//数量词：X{n,m}
//含义：代表的是X出现至少 n 次，但是不超过 m 次
//例如：匹配规则为"a{5,8}"，那么需要匹配的内容是有5个字符a 到 8个字符a之间
}
